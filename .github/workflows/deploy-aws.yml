name: Deploy to Production

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: AWS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # SCP - docker-compose.prod.deploy.yml - server
      - name: Upload docker-compose.prod.deploy.yml to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "./docker-compose.prod.deploy.yml"
          target: ~/srv/app/

      # remote generate .env
      - name: Create .env on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cat > ~/srv/app/.env <<EOF
            # GitHub Container Registry
            GHCR_USER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')
            GHCR_REPO=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')
            GHCR_TAG=$(
            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "${{ github.sha }}"
            else
            echo "dev-${{ github.sha }}"
            fi
            )
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_PORT=5432
            DB_HOST=postgresql
            JWT_PRIVATE_KEY="${{ secrets.JWT_PRIVATE_KEY }}"
            JWT_PUBLIC_KEY="${{ secrets.JWT_PUBLIC_KEY }}"
            CORS_ALLOWED_ORIGINS=${{ vars.CORS_ALLOWED_ORIGINS }}
            AUTH_SERVER_PORT=8080
            JOB_SERVER_PORT=8081
            APPLICATION_SERVER_PORT=8082
            ASSESS_SERVER_PORT=8083
            GENAI_SERVER_PORT=8079
            SPRING_PROFILES_ACTIVE=docker
            PYTHONDONTWRITEBYTECODE=1
            PYTHONUNBUFFERED=1
            EOF

      # SSH - pull images and restart containers
      - name: Pull images and restart containers remotely
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/srv/app
            docker compose -f docker-compose.prod.deploy.yml --env-file .env pull
            docker compose -f docker-compose.prod.deploy.yml --env-file .env up -d
