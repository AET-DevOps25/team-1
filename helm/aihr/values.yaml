global:
  # 镜像仓库信息（CI/CD 注入）
  ghcrUser: ""
  ghcrRepo: ""
  imageTag: ""

  # Ingress 通用设置
  ingress:
    enabled: true
    className: nginx
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod

  # 运行环境专属（由 values-dev / prod 覆盖）
  env:
    stage: ""          # dev / prod
    host: ""           # api.ai-hr*.student.k8s.aet.cit.tum.de
    tlsSecret: ""      # ai-hr-*-tls
    # CORS
    corsAllowed: ""          # 由 dev / prod 覆盖
  jwt:
    privateKey: ""           # helm --set-file 注入
    publicKey: ""            # helm --set-file 注入

  # 数据库凭据
  db:
    username: ""
    password: ""

# Grafana overrides
grafana:
  rbac:
    namespaced: true

  adminPassword: ""     # CI 用 --set-string 注入

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    className: nginx
    hosts: []           # 在 values-dev / prod 覆盖
    tls: []
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: auth-service
          type: prometheus
          url: http://{{ printf "%s-auth" .Release.Name }}:8080/actuator/prometheus
          access: proxy
        - name: job-service
          type: prometheus
          url: http://{{ printf "%s-job" .Release.Name }}:8081/actuator/prometheus
          access: proxy
        - name: application-service
          type: prometheus
          url: http://{{ printf "%s-application" .Release.Name }}:8082/actuator/prometheus
          access: proxy
        - name: genai-service
          type: prometheus
          url: http://{{ printf "%s-genai" .Release.Name }}:8000
          access: proxy